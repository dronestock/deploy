kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Name }}
  namespace: {{ .Kubernetes.Namespace }}
  labels:
    app: {{ .Name }}
    registry: {{ .Registry }}
    repository: {{ .KubernetesRepository }}
{{- if .Annotations }}
  annotations:
  {{- range $key, $value := .Annotations }}
     {{ $key }}: {{ $value }}
  {{- end }}
{{- end }}

spec:
  replicas: {{ .Stateless.Replicas }}
  selector:
    matchLabels:
      app: {{ .Name }}
      registry: {{ .Registry }}
      repository: {{ .KubernetesRepository }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Name }}
        registry: {{ .Registry }}
        repository: {{ .KubernetesRepository }}
    {{- if .Stateless.Annotations }}
      annotations:
      {{- range $key, $value := .Stateless.Annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
    spec:
      {{ if .Kubernetes.Share.Namespace }}shareProcessNamespace: true{{ end }}
      containers:
        - name: {{ .Name }}
          image: {{ .Registry }}/{{ .Repository }}:{{ .Tag }}
        {{- if .Ports }}
          ports:
          {{- range .Ports }}
            - name: {{ .Name }}
              containerPort: {{ .Local }}
              protocol: {{ .KubernetesProtocol }}
          {{- end }}
        {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{- if .Stateless.Environments }}
          {{- range $key, $value := .Stateless.Environments }}
            - name: {{ $key }}
              value: {{ $value }}
          {{- end }}
        {{- end }}
          {{- if .Resource }}
          resources:
          {{- if .Resource.Limit }}
              limits:
                {{ if .Resource.Limit.Cpu }}cpu: {{ .Resource.Limit.Cpu }}{{ end }}
                {{ if .Resource.Limit.Memory }}memory: {{ .Resource.Limit.Memory.Byte }}{{ end }}
          {{- end}}
          {{- if .Resource.Request }}
              requests:
                {{ if .Resource.Request.Cpu }}cpu: {{ .Resource.Request.Cpu }}{{ end }}
                {{ if .Resource.Request.Memory }}memory: {{ .Resource.Request.Memory.Byte }}{{ end }}
          {{- end}}
        {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
