kind: Deployment
apiVersion: apps/v1
metadata:
  {{ if .Kubernetes.Share.Namespace }}shareProcessNamespace: true{{ end -}}
  name: {{ .Name }}
  namespace: {{ .Kubernetes.Namespace }}
  labels:
    app: {{ .Name }}
    tag: {{ .Tag }}
{{- if .Stateless.Annotations }}
  annotations:
  {{- range $key, $value := . }}
     {{ $key }}: {{ $value }}
  {{- end }}
{{- end }}

spec:
  replicas: {{ .Stateless.Replicas }}
  selector:
    matchLabels:
      app: {{ .Name }}
      tag: {{ .Tag }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Name }}
        tag: {{ .Tag }}
    {{- if .Stateless.Annotations }}
      annotations:
      {{- range $key, $value := . }}
        {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
    spec:
      containers:
        - name: {{ .Name }}
          image: {{ .Registry }}/{{ .Repository }}:{{ .Tag }}
        {{- if .Stateless.Ports }}
          ports:
          {{- range .Stateless.Ports }}
            - name: {{ .Name }}
              containerPort: {{ .Port }}
              protocol: {{ .KubernetesProtocol }}
          {{- end }}
        {{- end }}
        {{- if .Stateless.Environments }}
          env:
          {{- range $key, $value := .Stateless.Environments }}
            - name: {{ $key }}
              value: {{ $value }}
          {{- end }}
        {{- end }}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
